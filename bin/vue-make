#!/usr/bin/env node

var program = require('commander');
var chalk = require('chalk');
var fs = require('fs');
var fse = require('fs-extra');

program
  .version('0.0.1');

program
  .command('mixin [name]')
  .description(chalk.gray('    # create mixin file'))
  .action(function (name, options) {
    var putDir = `./src/mixins/${name}.js`
    fse.copy(`${__dirname}/../templates/[mixin].js`, putDir).then(() => {
      fs.readFile(putDir, 'utf8', function (err, data) {
        fs.writeFile(putDir, data.split('[mixin]').join(name), 'utf8', function (err) {
           if (err) return console.log(err);
        });
      });
      console.log();
      console.log(chalk.yellow(`Create mixin success`));
      console.log();
    });
  });

program
  .command('store [moduleName]')
  .description(chalk.gray('    # create module file for store'))
  .action(function (moduleName, options) {
    console.log(moduleName)
  });

program
  .command('directive [name]')
  .description(chalk.gray('    # create directive file'))
  .action(function (name, options) {
    console.log(name)
  });

program
  .command('view [path]')
  .description(chalk.gray('    # create view file'))
  .action(function (path, options) {
  });

program
  .command('component [name]')
  .description(chalk.gray('    # create component file'))
  .action(function (name, options) {
    var putDir = `./src/components/${name}`
    fse.copy(`${__dirname}/../templates/[component]`, putDir).then(() => {
      fs.readFile(`${putDir}/index.vue`, 'utf8', function (err, data) {
        fs.writeFile(`${putDir}/index.vue`, data.split('[component]').join(name), 'utf8', function (err) {
           if (err) return console.log(err);
        });
      });
      fs.readFile(`${putDir}/style.scss`, 'utf8', function (err, data) {
        fs.writeFile(`${putDir}/style.scss`, data.split('[component]').join(name), 'utf8', function (err) {
           if (err) return console.log(err);
        });
      });
      console.log();
      console.log(chalk.yellow(`Create component success`));
      console.log();
    })
  });

// program
//   .command('*')
//   .action(function (name, options) {
//     console.log(name, options)
//   });

program.on('--help', function(){
  console.log();
  console.log('  Examples:');
  console.log();
  console.log('    $ vue-make --help');
  console.log('    $ vue-make -h');
});

program.parse(process.argv);
