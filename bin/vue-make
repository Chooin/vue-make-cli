#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const fs = require('fs')
const inquirer = require('inquirer')
const path = require('path')
const { createFile } = require('../utils/create-file')

program
  .version('0.0.1')

program
  .command('mixin [name]')
  .description(chalk.gray('    # create mixin file'))
  .action((name, options) => {
    createFile({
      from: path.resolve(__dirname, '../templates/[mixin].js'),
      to: `./src/mixins/${name}.js`
    })
  })

program
  .command('store [moduleName]')
  .description(chalk.gray('    # create module file for store'))
  .action(function (moduleName, options) {
    console.log(moduleName)
  })

program
  .command('directive [name]')
  .description(chalk.gray('    # create directive file'))
  .action(function (name, options) {

    let putDir = `./src/directives/${name}.js`
    fse.copy(path.resolve(__dirname, '../templates/[directive].js'), putDir).then(() => {
      fs.readFile(putDir, 'utf8', function (err, data) {
        fs.writeFile(putDir, data.split('[directive]').join(name), 'utf8', function (err) {
           if (err) return console.log(err)
        })
      })
      console.log()
      console.log(chalk.yellow(`创建 directive 成功`))
      console.log()
    })
  })

program
  .command('view [path]')
  .description(chalk.gray('    # create view file'))
  .action((name, options) => {
    let split = name.split('/')
    let hasFile = fs.existsSync(path.resolve(`./src/views/${name}`))
    if (hasFile) {
      inquirer.prompt([{
        type: 'confirm',
        message: '视图已存在是否继续？',
        name: 'ok',
        default: false
      }]).then(answers => {
        if (answers.ok) {
          createFile({
            name,
            type: 'view'
          })
        } else {
          console.log('已取消，生成视图')
        }
      }).catch(_ => {
        console.log(_)
      })
    } else {
      createFile({
        name,
        type: 'view'
      })
    }
  })

program
  .command('component [name]')
  .description(chalk.gray('    # create component file'))
  .action((name, options) => {
    let hasFile = fs.existsSync(path.resolve(`./src/components/${name}`))
    if (hasFile) {
      inquirer.prompt([{
        type: 'confirm',
        message: '组件已存在是否继续？',
        name: 'ok',
        default: false
      }]).then(answers => {
        if (answers.ok) {
          createFile({
            name,
            type: 'component'
          })
        } else {
          console.log('已取消，生成视图')
        }
      }).catch(_ => {
        console.log(_)
      })
    } else {
      createFile({
        name,
        type: 'component'
      })
    }
  })

// program
//   .command('*')
//   .action(function (name, options) {
//     console.log(name, options)
//   })

program.on('--help', function(){
  console.log()
  console.log('  Examples:')
  console.log()
  console.log('    $ vue-make --help')
  console.log('    $ vue-make -h')
})

program.parse(process.argv)
